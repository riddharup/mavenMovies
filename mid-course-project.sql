USE MAVENMOVIES;

/*
WE WILL NEED A LIST OF ALL STAFF MEMBERS, INCLUDING THEIR FIRST AND LAST NAMES, 
EMAIL ADDRESSES, AND THE STORE IDENTIFICATION NUMBER WHERE THEY WORK
*/

SELECT 
	FIRST_NAME,
    LAST_NAME,
    EMAIL,
    STORE_ID
FROM 
STAFF;

-- WE WILL NEED SEPARATE COUNTS OF INVENTORY ITEMS HELD AT EACH OF YOUR TWO STORES
SELECT
	STORE_ID,
    COUNT(inventory_ID)
FROM 
	inventory
GROUP BY STORE_ID;

-- WE WILL NEED A COUNT OF ACTIVE CUSTOMERS FOR EACH OF YOUR STORES. SEPARATELY, PLEASE.
SELECT 
	STORE_ID,
    COUNT(CUSTOMER_ID)
FROM
	customer
WHERE ACTIVE = 1
GROUP BY STORE_ID;

/*
IN ORDER TO ASSESS THE LIABILITY OF A DATA BREACH, WE WILL NEED YOU TO PROVIDE A
COUNT OF ALL CUSTOMER EMAIL ADDRESSES STORED IN THE DATABASE.
*/

SELECT
	COUNT(EMAIL)
FROM
	CUSTOMER;
    
/* 
WE ARE INTERESTED IN HOW DIVERSE YOUR FILM OFFERING IS AS A MEANS OF UNDERSTANDING HOW 
LIKELY YOU ARE TO KEEP CUSTOMERS ENGAGED IN THE FUTURE. PLEASE PROVIDE A COUNT OF UNIQUE
FILM TITLES YOU HAVE IN INVENTORY AT EACH STORE AND THEN PROVIDE A COUNT OF THE UNIQUE
CATEGORIES OF FILMS YOU PROVIDE. 
*/

SELECT 
	INVENTORY.STORE_ID,
    COUNT(DISTINCT FILM.TITLE) AS COUNT_OF_UNIQUE_FILM_TITLES,
    COUNT(DISTINCT FILM_CATEGORY.CATEGORY_ID) AS COUNT_OF_UNIQUE_CATEGORIES_FILM
FROM INVENTORY 
LEFT JOIN FILM ON FILM.FILM_ID  = INVENTORY.FILM_ID
LEFT JOIN FILM_CATEGORY ON FILM_CATEGORY.FILM_ID  = INVENTORY.FILM_ID
GROUP BY 1;

/*
WE WOULD LIKE TO UNDERSTAND THE REPLACEMENT COST OF YOUR FILMS. PLEASE PROVIDE THE REPLACEMENT
COST FOR THE FILMS THAT IS LEAST EXPENSIVE TO REPLACE, THE MOST EXPENSIVE TO REPLACE, AND THE 
AVERAGE OF ALL FILMS YOU CARRY.
*/

SELECT 
    MIN(REPLACEMENT_COST) AS LEAST_EXPENSIVE,
    MAX(REPLACEMENT_COST) AS MOST_EXPENSIVE,
    AVG(REPLACEMENT_COST) AS AVERAGE_REPLACEMENT_COST
FROM FILM;

/*
WE ARE INTERESTED IN HAVING YOU PUT PAYMENT MONITORING SYSTEMS AND MAXIMUM PAYMENT PROCESSING
RESTRICTIONS IN PLACE IN ORDER TO MINIMIZE THE FUTURE RISK OF FRAUD BY YOUR STAFF. PLEASE
PROVIDE THE AVERAGE PAYMENT YOU PROCESS AS WELL AS THE MAXIMUM PAYMENT YOU HAVE PROCESSED.
*/

SELECT 
	AVG(AMOUNT) AS AVERAGE_PAYMENT,
    MAX(AMOUNT) AS MAX_PAYMENT
FROM PAYMENT;
 
 /*
WE WOULD LIKE BETTER UNDERSTAND WHAT YOUR CUSTOMER BASE LOOKS LIKE. PLEASE PROVIDE A LIST OF ALL
CUSTOMER IDENTIFICATION VALUES, WITH A COUNT OF RENTALS THEY HAVE MADE ALL-TIME, WITH YOUR HIGHEST
VOLUME CUSTOMERS AT THE TOP OF THE LIST.
*/

SELECT 
	CUSTOMER_ID,
    COUNT(RENTAL_ID) AS COUNT_OF_RENTAL
FROM RENTAL
group by CUSTOMER_ID
ORDER BY COUNT_OF_RENTAL DESC;

